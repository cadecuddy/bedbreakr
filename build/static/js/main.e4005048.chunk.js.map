{"version":3,"sources":["SearchBar.js","StatsPanel.js","App.js","index.js"],"names":["SearchBar","query","onSearch","useState","searchText","setSearchText","className","type","spellCheck","placeholder","onKeyPress","e","key","onChange","target","value","StatsPanel","stat","player_data","tab","setTab","tabGamemodeID","handleClick","dataNull","hasOwnProperty","displayStat","stats","Bedwars","getRatio","stat1","stat2","KD","parseFloat","Object","is","NaN","bottom","distance","alt","src","style","marginRight","width","height","uuid","newPackageRank","achievements","displayInfo","delay","start","end","duration","separator","countUpRef","ref","decimals","ButtonGroup","size","Button","onClick","active","variant","paddingTop","fontSize","marginTop","backgroundColor","App","player","setPlayer","loading","setLoading","api","process","text","a","replace","fetch","then","res","json","result","status","console","log","id","bedwars_res","bedwars_json","catch","err","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.e4005048.chunk.js","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nexport default function SearchBar(query) {\n\n    const {onSearch} = query;\n\n    const [searchText, setSearchText] = useState('');\n\n    const handleEnterKeyPressed = (e) => {\n        if (e.key === \"Enter\") {\n            onSearch(searchText);\n            setSearchText('');\n        }\n    }\n\n    return (\n            <div>\n                <div className='search-box'>\n                    <input type='text' className='search-bar' spellCheck={false} placeholder='Search player' onKeyPress={handleEnterKeyPressed} onChange={e => setSearchText(e.target.value)} value={searchText} />\n                </div>\n            </div>\n    );\n}\n","import React from 'react'\nimport { Fade } from 'react-reveal';\nimport CountUp from 'react-countup';\nimport { useState } from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nexport default function StatsPanel({player_data}) {\n\n    const [tab, setTab] = useState(1);\n    const tabGamemodeID = ['eight_one_', 'eight_two_', 'four_three_', 'four_four_']\n\n    const handleClick = (e) => {\n        setTab(e.target.value);\n    }\n\n    const dataNull = () => {\n        if (player_data === null || typeof(player_data) === 'undefined' || (player_data.hasOwnProperty('stats') === false)) {\n            return true;\n        }\n        return false;\n    }\n\n    const displayInfo = stat => {\n        if (dataNull()) {\n            return \"null\";\n        } else if (typeof(player_data[stat]) === 'undefined') {\n            return \"null\";\n        }\n        return player_data[stat];\n    }\n\n    const displayStat = stat => {\n        if (dataNull() || typeof(player_data.stats) === 'undefined') {\n            return 0;\n        } else if (player_data.stats.hasOwnProperty('Bedwars') === false || player_data.stats.Bedwars.hasOwnProperty(stat) === false ) {\n            return 0;\n        }\n        return player_data.stats.Bedwars[stat];\n    }\n\n    const getLevel = (stat) => {\n        if ( dataNull() || player_data.hasOwnProperty('achievements') === false || player_data.achievements.hasOwnProperty('bedwars_level') === false) {\n            return 0;\n    }\n        return player_data.achievements[stat];\n    }\n\n    const getRatio = (stat1, stat2) => {\n        let KD = parseFloat(displayStat(stat1)/displayStat(stat2));\n        if (Object.is(NaN,KD)) {\n            return 0;\n        }\n        return KD;\n    }\n\n    const getRank = () => {\n        if (player_data === null || dataNull()) {\n            return 'no-rank'\n        }\n        if (player_data.hasOwnProperty('newPackageRank')) {\n            return player_data.newPackageRank;\n        }\n        return 'no-rank'\n    }\n\n    if (!dataNull()) {\n\n        return (\n            <Fade bottom distance={'45px'}>\n                <div className='stat-panel-box'>\n                    <div className='username-header'>\n                        <img alt={''} src={`https://crafatar.com/avatars/${player_data.uuid}?overlay=true&size=100`} className='player-head' style={{marginRight: '30px', width: '85px', height: '85px'}}/>\n                        <div className={getRank()}>[{getLevel('bedwars_level')}]✫ {displayInfo('displayname')}</div>\n                    </div>\n                    <Fade delay={400}>\n                        <div className='overall-stats'>\n                                <CountUp start={0} end={displayStat('wins_bedwars')} delay={0} duration={1.4} separator={','}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Wins: <span className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp> \n                                <CountUp start={0} end={displayStat('losses_bedwars')} delay={0} duration={1.4} decimals={0} separator={','}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Losses: <span className='number'  ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>\n                                <CountUp start={0} end={getRatio('wins_bedwars', 'games_played_bedwars') * 100} delay={0} duration={1.5}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Win Percentage: <span className='number' ref={ countUpRef }/><p className='number'>%</p>\n                                        </div>\n                                    )}\n                                </CountUp>    \n                                <CountUp start={0} end={displayStat('final_kills_bedwars')} delay={0} duration={1.4} decimals={0} separator={','}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Final Kills: <span  className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>\n                                <CountUp start={0} end={displayStat('final_deaths_bedwars')} delay={0} duration={1.4} decimals={0} separator={','}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Final Deaths: <span  className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>\n                                <CountUp start={0} end={getRatio('final_kills_bedwars', 'final_deaths_bedwars')} delay={0} duration={1.4} decimals={2}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Final K/D: <span className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>\n                                <CountUp start={0} end={displayStat('beds_broken_bedwars')} delay={0} duration={1.4} decimals={0} separator={','}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Beds Broken: <span className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>  \n                                <CountUp start={0} end={displayStat('beds_lost_bedwars')} delay={0} duration={1.4}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Beds Lost: <span  className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>   \n                                <CountUp start={0} end={getRatio('beds_broken_bedwars', 'beds_lost_bedwars')} delay={0} duration={1.4} decimals={2}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Bed Ratio: <span  className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>\n                                <CountUp start={0} end={displayStat('winstreak')} delay={0} duration={2.5}>\n                                    {({ countUpRef }) => (\n                                        <div>\n                                            Winstreak: <span  className='number' ref={ countUpRef}/>\n                                        </div>\n                                    )}\n                                </CountUp>        \n                        </div>\n                    </Fade>\n                </div>\n                <div className='stats-tabs'>\n                            <ButtonGroup size='lg'>\n                                <Button onClick={handleClick} active={tab === 1} variant='outline-dark' value='1'> Solos </Button>\n                                <Button onClick={handleClick} active={tab === 2} variant='outline-dark' value='2'> Duos </Button>\n                                <Button onClick={handleClick} active={tab === 3} variant='outline-dark' value='3'> 3v3v3v3 </Button>\n                                <Button onClick={handleClick} active={tab === 4} variant='outline-dark' value='4'> 4v4v4v4 </Button>\n                            </ButtonGroup>\n                            <div>\n                                <Fade delay={400}>\n                                    <div className='gamemode-stat' style={{paddingTop:'35px'}}>\n                                        <p className=\"alignleft\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'wins_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p>\n                                        <p className=\"aligncenter\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'final_kills_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p>\n                                        <p className=\"alignright\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'beds_broken_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p> \n                                    </div>\n                                    <div className='gamemode-stat-labels' style={{marginTop:'-25px', backgroundColor:'transparent'}}>\n                                        <p className=\"alignleft\">Wins</p>\n                                        <p className=\"aligncenter\">Final Kills</p>\n                                        <p className=\"alignright\">Bed Breaks</p> \n                                    </div>\n                                    <div className='gamemode-stat' style={{paddingTop:'35px'}}>\n                                        <p className=\"alignleft\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'games_played_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p>\n                                        <p className=\"aligncenter\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'final_deaths_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p>\n                                        <p className=\"alignright\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={displayStat(tabGamemodeID[tab - 1] + 'beds_lost_bedwars')} delay={0} duration={.5} separator={','}/>\n                                        </p> \n                                    </div>\n                                    <div className='gamemode-stat-labels' style={{marginTop:'-25px', backgroundColor:'transparent'}}>\n                                        <p className=\"alignleft\">Games</p>\n                                        <p className=\"aligncenter\">Final Deaths</p>\n                                        <p className=\"alignright\">Beds Lost</p> \n                                    </div>\n                                    <div className='gamemode-stat' style={{paddingTop:'35px'}}>\n                                        <p className=\"alignleft\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={getRatio(tabGamemodeID[tab - 1] + 'wins_bedwars', tabGamemodeID[tab - 1] + 'games_played_bedwars') * 100} delay={0} duration={.5} separator={','}/>%\n                                        </p>\n                                        <p className=\"aligncenter\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={getRatio(tabGamemodeID[tab - 1] + 'final_kills_bedwars', tabGamemodeID[tab - 1] + 'final_deaths_bedwars')} delay={0} decimals={2} duration={.5} separator={','}/>\n                                        </p>\n                                        <p className=\"alignright\" style={{fontSize:'50px'}}>\n                                            <CountUp start={0} end={getRatio(tabGamemodeID[tab - 1] + 'beds_broken_bedwars', tabGamemodeID[tab - 1] + 'beds_lost_bedwars')} delay={0} duration={.5} decimals={2} separator={','}/>\n                                        </p> \n                                    </div>\n                                    <div className='gamemode-stat-labels' style={{marginTop:'-25px', backgroundColor:'transparent'}}>\n                                        <p className=\"alignleft\">Winrate</p>\n                                        <p className=\"aligncenter\">Final K/D</p>\n                                        <p className=\"alignright\">Bed Ratio</p> \n                                    </div>                               \n                                </Fade>\n                            </div>\n                </div>\n            </Fade>\n        )\n    }\n    else {\n        return (\n            <Fade bottom distance={'45px'}>\n                <div className='stat-panel-box'>\n                    <div className='username-header'>\n                            <img alt={''} src={'default.png'} className='player-head' style={{marginRight: '30px', width: '85px', height: '85px'}}/>\n                            <div className='not-found'>\n                                Player not found\n                            </div>\n                    </div>\n                </div>\n            </Fade>\n        )\n    }\n}\n","import React from 'react';\nimport Fade from 'react-reveal'\nimport SearchBar from './SearchBar';\nimport { useState } from 'react';\nimport StatsPanel from './StatsPanel';\n\nexport default function App() {\n  const [player, setPlayer] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const api = {\n    base: 'https://api.hypixel.net/player?key=',\n    key: process.env.REACT_APP_HYPIXEL_API_KEY\n  }\n\n  const onSearch = async(text) => {\n    if (text === '') {\n      return ''\n    }\n    text = text.replace(/\\s+/g, '');\n\n    fetch(`https://api.minetools.eu/uuid/${text}`)\n      .then(res => res.json())\n      .then(result => {\n        if (result.status === \"ERR\" || result === \"\") {\n          setLoading(true)\n          setPlayer(null)\n          setLoading(false)\n          console.log(result);\n        }\n        else {\n            fetch(`${api.base}${api.key}&uuid=${result.id}`)\n            .then(bedwars_res => bedwars_res.json())\n            .then(bedwars_json => {\n              setLoading(true)\n              setPlayer(bedwars_json.player);\n              setLoading(false)\n              });\n        }}).catch(err => {\n          setPlayer(null);\n      });\n  }\n\n  return (\n    <main>\n      <Fade bottom distance={'45px'}>\n        <div className='intro-header'>\n          BEDBREAKR\n            <div className='intro-subheader'>\n              Quick Minecraft Bedwars Stats\n              <SearchBar onSearch={onSearch}/>\n            </div>\n        </div>\n      </Fade>\n      {loading === false && <StatsPanel player_data={player}/>}\n      <Fade delay={600}>\n        <div className='github'>\n          by vvalet\n        </div>\n      </Fade>\n    </main>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);"],"sourceRoot":""}